let
  sources = import ./nix/sources.nix; # sources.nix was generated by niv
  pkgs = import sources.nixpkgs { };
  nixfiles = import sources.nixfiles { };
  neovim = nixfiles.neovim {
    pkgs = pkgs;
    withOCaml = true;
    withWriting = true;
  };
in
pkgs.mkShell
{
  # nix-shell runs shell hooks at start
  shellHooks = ''
    alias vim='nvim'
  '';

  # lists all packages in development environment
  buildInputs = with pkgs; [
    bash
    tailwindcss

    ocamlPackages.ocaml
    ocamlPackages.dune_3
    ocamlPackages.findlib
    ocamlPackages.utop
    ocamlPackages.odoc
    ocamlPackages.ocaml-lsp
    ocamlformat

    ocamlPackages.base
    ocamlPackages.bonsai
    ocamlPackages.async
    ocamlPackages.async_js
    ocamlPackages.core_unix
    ocamlPackages.ppx_let
    ocamlPackages.ppx_css
    ocamlPackages.merlin-lib
    ocamlPackages.ppx_pattern_bind
    ocamlPackages.virtual_dom
    ocamlPackages.js_of_ocaml
    ocamlPackages.js_of_ocaml-ppx
    ocamlPackages.ocaml-embed-file
    ocamlPackages.camlzip
    ocamlPackages.decompress
    ocamlPackages.cohttp_static_handler
  ] ++ [ neovim ];
}
